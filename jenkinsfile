pipeline {
    agent any

    environment {
        SERVER_IP = credentials('SERVER_IP_CREDENTIAL_ID')
        SERVER_USER = credentials('SERVER_USER_CREDENTIAL_ID')
        SERVER_PASSWORD = credentials('SERVER_PASSWORD_CREDENTIAL_ID')
    }

    stages {

        stage('Install Dependencies & Build Frontend') {
            steps {
                sh '''
                    echo "Installing dependencies for Angular..."
                    npm install

                    echo "Building Angular app..."
                    npm run build --prod

                    echo "Checking build output..."
                    ls -l dist/
                    ls -l dist/tansam_new_cms/
                '''
            }
        }

        stage('Prepare Deployment Package') {
            steps {
                sh '''
                    echo "Creating deployment tarball of full workspace..."
                    tar -czf tansam_full.tar.gz *
                    ls -lh tansam_full.tar.gz || { echo "Failed to create tarball"; exit 1; }
                '''
            }
            post {
                success {
                    archiveArtifacts artifacts: 'tansam_full.tar.gz', fingerprint: true
                }
            }
        }

        stage('Deploy to VPS') {
            steps {
                sh '''
                    echo "Installing sshpass if not already present..."
                    which sshpass || (sudo apt-get update && sudo apt-get install -y sshpass)

                    echo "Setting up SSH known_hosts..."
                    mkdir -p ~/.ssh
                    ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

                    echo "Copying deployment tarball to VPS..."
                    sshpass -p "$SERVER_PASSWORD" scp tansam_full.tar.gz $SERVER_USER@$SERVER_IP:/home/mytansam/

                    echo "Extracting and running deployment commands on VPS..."
                    sshpass -p "$SERVER_PASSWORD" ssh $SERVER_USER@$SERVER_IP '
                        cd /home/mytansam

                        echo "Cleaning old deployment..."
                        rm -rf tansam_web/*

                        echo "Extracting new deployment..."
                        tar -xzf tansam_full.tar.gz -C tansam_web/
                        rm tansam_full.tar.gz

                        echo "Restarting Node.js backend..."
                        cd tansam_web/backend
                        pm2 restart server.js || pm2 start server.js --name tansam_node_backend

                        echo "Installing Django dependencies..."
                        cd ../backend_cms
                        source venv/bin/activate || python3 -m venv venv && source venv/bin/activate
                        pip install -r requirements.txt

                        echo "Restarting Django backend service..."
                        sudo systemctl restart tansam_backend.service

                        echo "Restarting Nginx..."
                        sudo systemctl restart nginx
                    '
                '''
            }
        }
    }
}
